// Перевернуть цифры в числе: 79886 => 68897, -324234 => 432423

const numReverse = (numbers) => {
    numbers = Math.abs(numbers);    // откинуть минус, если есть, т.е. выделить модуль числа
    // reverse - метод массива, поэтому нужно сначала сделать строку массивом с помощью split, а потом обратно строкой join
    numbers = +(numbers.toString().split("").reverse().join(''));  
    return numbers;
}




// Your task is to implement function toReadable that converts given number, to readable string.
// For example:
// toReadable(1); // Will return 'one'
// toReadable(997); //will return 'nine hundred ninety seven'

function toReadable (number) {
  
    const units = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
    const teens = ['', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
    const dosens = ['', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];

    const between = number.toString();
        
    if (number == 0) {
        return 'zero';
    }

    else if (between.length == 1) { 
        return units[between[between.length - 1]];
    } 

    else if ((between[between.length - 2] == 1) && (between.length == 2)) {
        return teens[+(between[between.length - 1]) + 1];
    }

    else if ((between[between.length - 2] > 1) && (between.length == 2)) {
        
        if ((between[between.length - 2] > 1) && (between.length == 2) && (between[between.length - 1] != 0)) {
            return `${dosens[+(between[between.length - 2]) - 1]} ${units[between[between.length - 1]]}`;
            
        } else {
            return `${dosens[+(between[between.length - 2]) - 1]}`;
        }
    } 

    else if ((between[between.length - 2] == 1) && (between.length == 3)) {
        return `${units[between[between.length - 3]]} hundred ${teens[+(between[between.length - 1]) + 1]}`;
    }

    else if (between.length == 3) {

        if ((between[between.length - 1] == 0) && (between[between.length - 2] == 0)) {
            return `${units[between[between.length - 3]]} hundred`;

        } else if ((between[between.length - 1] == 0) && (between[between.length - 2] != 0)) {
            return `${units[between[between.length - 3]]} hundred ${dosens[+(between[between.length - 2]) - 1]}`;
        
        } else if ((between[between.length - 1] != 0) && (between[between.length - 2] == 0)) {
            return `${units[between[between.length - 3]]} hundred ${units[between[between.length - 1]]}`;

        } else if ((between[between.length - 1] != 0) && (between[between.length - 2] != 0)) {
            return `${units[between[between.length - 3]]} hundred ${dosens[+(between[between.length - 2]) - 1]} ${units[between[between.length - 1]]}`;
        } 
    }
}
